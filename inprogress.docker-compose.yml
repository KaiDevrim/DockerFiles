linx-server:
  container_name: linx-server
  image: andreimarcu/linx-server
  command: -config /data/linx-server.conf
  volumes:
    - ${HDD}/linx:/data/files
    - ${ROOT}/linx:/data/meta
    - ${ROOT}/linx/linx-server.conf:/data/linx-server.conf
  ports:
    - "1010:8080"
  restart: unless-stopped

sharry:
  image: eikek0/sharry:latest
  container_name: sharry
  command: /opt/sharry.conf
  ports:
    - "9099:9090"
  volumes:
    - ${ROOT}/sharry/sharry.conf:/opt/sharry.conf
  depends_on:
    - sharry_db
sharry_db:
  image: postgres:13.3
  container_name: sharry_db
  volumes:
    - ${ROOT}/sharry/db:/var/lib/postgresql/data/
  environment:
    - POSTGRES_USER=${SHARRY_DB_USER}
    - POSTGRES_PASSWORD=${SHARRY_DB_PASS}
    - POSTGRES_DB=sharry

dailytxt:
  image: phitux/dailytxt:latest
  container_name: dailytxt
  restart: always
  environment:
    - PORT=8765
    - SECRET_KEY=${DAILY_SECRET}
    # Set it to False or remove the line completely to disallow registration of new users.
    - ALLOW_REGISTRATION=True
  ports:
    - 8765:8765"
    # perhaps you only want:
    # "<host_port>:8765"
  volumes:
    - "${ROOT}/dailytxt:/app/data/"

foldingathome:
  image: ghcr.io/linuxserver/foldingathome
  container_name: foldingathome
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/FAH:/config
  ports:
    - 7396:7396
    - 36330:36330
  restart: unless-stopped

firefox:
  image: ghcr.io/linuxserver/firefox
  container_name: firefox
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/firefox:/config
  ports:
    - 3020:3000
  shm_size: "1gb"
  restart: unless-stopped

filezilla:
  image: ghcr.io/linuxserver/filezilla
  container_name: filezilla
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/filezilla:/config
  ports:
    - 3021:3000
  restart: unless-stopped

endlessh:
  image: ghcr.io/linuxserver/endlessh
  container_name: endlessh
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - MSDELAY=10000
    - MAXLINES=32
    - MAXCLIENTS=4096
    - LOGFILE=true
  volumes:
    - ${ROOT}/endlessh:/config
  ports:
    - 22:2222
  restart: unless-stopped

embystat:
  image: ghcr.io/linuxserver/embystat
  container_name: embystat
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/embystat:/config
  ports:
    - 6555:6555
  restart: unless-stopped

emby:
  image: ghcr.io/linuxserver/emby
  container_name: emby
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/emby:/config
    - ${HDD}/media/tv:/data/tvshows
    - ${HDD}/media/movies:/data/movies
    - /opt/vc/lib:/opt/vc/lib #optional
  ports:
    - 8096:8096
    - 8920:8920
  restart: unless-stopped

duplicati:
  image: ghcr.io/linuxserver/duplicati
  container_name: duplicati
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/duplicati:/config
    - ${HDD}/backups:/backups
  ports:
    - 8200:8200
  restart: unless-stopped

dokuwiki:
  image: ghcr.io/linuxserver/dokuwiki
  container_name: dokuwiki
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/dokuwiki:/config
  ports:
    - 7040:80
  restart: unless-stopped

diskover:
  image: linuxserver/diskover
  container_name: diskover
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - ES_HOST=elasticsearch
    - ES_PORT=9200
    - ES_USER=elastic
    - ES_PASS=changeme
    - RUN_ON_START=true
    - USE_CRON=true
  volumes:
    - ${ROOT}/diskover:/config
    - ${HDD}/diskover:/data
  ports:
    - 9490:80
    - 9181:9181
    - 9999:9999
  mem_limit: 4096m
  restart: unless-stopped
  depends_on:
    - elasticsearch
    - redis

dillinger:
  image: ghcr.io/linuxserver/dillinger
  container_name: dillinger
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/dillinger:/config
  ports:
    - 8490:8080
  restart: unless-stopped

digikam:
  image: ghcr.io/linuxserver/digikam
  container_name: digikam
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/digikam:/config
  ports:
    - 5647:3000
  restart: unless-stopped

darktable:
  image: ghcr.io/linuxserver/darktable
  container_name: darktable
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/darktable:/config
  ports:
    - 8402:3000
  restart: unless-stopped

daapd:
  image: ghcr.io/linuxserver/daapd
  container_name: daapd
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/daapd:/config
    - ${HDD}/media/music:/music
  restart: unless-stopped

couchpotato:
  image: ghcr.io/linuxserver/couchpotato
  container_name: couchpotato
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/couchpotato:/config
    - ${HDD}/media/downloads:/downloads
    - ${HDD}/media/movies:/movies
  ports:
    - 5050:5050
  restart: unless-stopped

cops:
  image: ghcr.io/linuxserver/cops
  container_name: cops
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/cops:/config
    - ${HDD}/media/books:/books
  ports:
    - 3820:80
  restart: unless-stopped

code-server:
  image: ghcr.io/linuxserver/code-server
  container_name: code-server
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - PASSWORD=${CODE_PASS}
    - SUDO_PASSWORD=${CODE_SUDO_PASS}
    - PROXY_DOMAIN=code.devrim.website
  volumes:
    - ${ROOT}/code:/config
  ports:
    - 8443:8443
  restart: unless-stopped

calibre-web:
  image: ghcr.io/linuxserver/calibre-web
  container_name: calibre-web
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - DOCKER_MODS=linuxserver/calibre-web:calibre
  volumes:
    - ${ROOT}/calbire-web:/config
    - ${HDD}/media/books:/books
  ports:
    - 8083:8083
  restart: unless-stopped

calibre:
  image: ghcr.io/linuxserver/calibre
  container_name: calibre
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - PASSWORD=${CALIBRE_PASS}
  volumes:
    - /path/to/data:/config
  ports:
    - 4320:8080
    - 1720:8081
  restart: unless-stopped

bookstack:
  image: ghcr.io/linuxserver/bookstack
  container_name: bookstack
  environment:
    - PUID=1000
    - PGID=1000
    - APP_URL=bookstack.devrim.website
    - DB_HOST=bookstack_db
    - DB_USER=${BOOKSTACK_DB_USER}
    - DB_PASS=${BOOKSTACK_DB_PASS}
    - DB_DATABASE=bookstackapp
  volumes:
    - ${ROOT}/bookstack:/config
  ports:
    - 6875:80
  restart: unless-stopped
  depends_on:
    - bookstack_db
bookstack_db:
  image: ghcr.io/linuxserver/mariadb
  container_name: bookstack_db
  environment:
    - PUID=1000
    - PGID=1000
    - MYSQL_ROOT_PASSWORD=${BOOKSTACK_ROOT_PASS}
    - TZ=${TZ}
    - MYSQL_DATABASE=bookstackapp
    - MYSQL_USER=${BOOKSTACK_DB_USER}
    - MYSQL_PASSWORD=${BOOKSTACK_DB_PASS}
  volumes:
    - ${ROOT}/bookstack/db:/config
  restart: unless-stopped

booksonic-air:
  image: ghcr.io/linuxserver/booksonic-air
  container_name: booksonic-air
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - CONTEXT_PATH=url-base
  volumes:
    - ${ROOT}/booksonic/:/config
    - ${HDD}/media/audiobooks:/audiobooks
    - ${HDD}/media/podcasts:/podcasts
    - ${HDD}/media/othermedia:/othermedia
  ports:
    - 4040:4040
  restart: unless-stopped

boinc:
  image: ghcr.io/linuxserver/boinc
  container_name: boinc
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - PASSWORD=${BOINC_PASS}
  volumes:
    - ${ROOT}/boinc:/config
  ports:
    - 8080:8080
  restart: unless-stopped

beets:
  image: ghcr.io/linuxserver/beets
  container_name: beets
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - </path/to/appdata/config>:/config
    - </path/to/music/library>:/music
    - </path/to/ingest>:/downloads
  ports:
    - 8337:8337
  restart: unless-stopped

bazarr:
  image: ghcr.io/linuxserver/bazarr
  container_name: bazarr
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/bazarr/config:/config
    - /path/to/movies:/movies #optional
    - /path/to/tv:/tv #optional
  ports:
    - 6767:6767
  restart: unless-stopped

audacity:
  image: ghcr.io/linuxserver/audacity
  container_name: audacity
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/config:/config
  ports:
    - 3000:3000
  restart: unless-stopped

airsonic:
  image: ghcr.io/linuxserver/airsonic
  container_name: airsonic
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - CONTEXT_PATH=<URL_BASE> #optional
    - JAVA_OPTS=<options> #optional
  volumes:
    - </path/to/config>:/config
    - </path/to/music>:/music
    - </path/to/playlists>:/playlists
    - </path/to/podcasts>:/podcasts
    - </path/to/other media>:/media #optional
  ports:
    - 4040:4040
  devices:
    - /dev/snd:/dev/snd #optional
  restart: unless-stopped

wireshark:
  image: ghcr.io/linuxserver/wireshark
  container_name: wireshark
  cap_add:
    - NET_ADMIN
  network_mode: host
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/config:/config
  ports:
    - 3000:3000 #optional
  restart: unless-stopped

wikijs:
  image: ghcr.io/linuxserver/wikijs
  container_name: wikijs
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - <path to config>:/config
    - <path to data>:/data
  ports:
    - 3000:3000
  restart: unless-stopped

webtop:
  image: ghcr.io/linuxserver/webtop
  container_name: webtop
  privileged: true #optional
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/data:/config
    - /var/run/docker.sock:/var/run/docker.sock #optional
  ports:
    - 3000:3000
  shm_size: "1gb" #optional
  restart: unless-stopped

ubooquity:
  image: ghcr.io/linuxserver/ubooquity
  container_name: ubooquity
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - MAXMEM=<maxmem>
  volumes:
    - <path to data>:/config
    - <path to books>:/books
    - <path to comics>:/comics
    - <path to raw files>:/files
  ports:
    - 2202:2202
    - 2203:2203
  restart: unless-stopped

tautulli:
  image: ghcr.io/linuxserver/tautulli
  container_name: tautulli
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - <path to data>:/config
  ports:
    - 8181:8181
  restart: unless-stopped

taisun:
  image: linuxserver/taisun
  container_name: taisun
  network_mode: bridge
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  ports:
    - 3000:3000
  restart: unless-stopped

synclounge:
  image: ghcr.io/linuxserver/synclounge
  container_name: synclounge
  environment:
    - TZ=${TZ}
    - AUTH_LIST=plexuser1,plexuser2,email1,machineid1 #optional
    - AUTOJOIN_ENABLED=false #optional
    - AUTOJOIN_ROOM=roomname #optional
  ports:
    - 8088:8088
  restart: unless-stopped

sonarr:
  image: ghcr.io/linuxserver/sonarr
  container_name: sonarr
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/data:/config
    - /path/to/tvseries:/tv #optional
    - /path/to/downloadclient-downloads:/downloads #optional
  ports:
    - 8989:8989
  restart: unless-stopped

mysql:
  image: linuxserver/mariadb
  container_name: snipe_mysql
  restart: always
  volumes:
    - <path to mysql data>:/config
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - MYSQL_ROOT_PASSWORD=<secret password>
    - MYSQL_USER=snipe
    - MYSQL_PASSWORD=<secret user password>
    - MYSQL_DATABASE=snipe
snipeit:
  image: linuxserver/snipe-it:latest
  container_name: snipe-it
  restart: always
  depends_on:
    - mysql
  volumes:
    - <path to data>:/config
  environment:
    - NGINX_APP_URL=< your application URL IE 192.168.10.1:8080>
    - MYSQL_PORT_3306_TCP_ADDR=mysql
    - MYSQL_PORT_3306_TCP_PORT=3306
    - MYSQL_DATABASE=snipe
    - MYSQL_USER=snipe
    - MYSQL_PASSWORD=<secret user password>
    - PGID=1000
    - PUID=1000
  ports:
    - "8080:80"

snapdrop:
  image: ghcr.io/linuxserver/snapdrop
  container_name: snapdrop
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - <path to config>:/config
  ports:
    - 80:80
    - 443:443
  restart: unless-stopped

smokeping:
  image: ghcr.io/linuxserver/smokeping
  container_name: smokeping
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - </path/to/smokeping/config>:/config
    - </path/to/smokeping/data>:/data
  ports:
    - 80:80
  restart: unless-stopped

sickgear:
  image: ghcr.io/linuxserver/sickgear
  container_name: sickgear
  environment:
    - PUID=1000
    - PGID=1000
  volumes:
    - /path/to/data:/config
    - /path/to/data:/tv
    - /path/to/data:/downloads
  ports:
    - 8081:8081
  restart: unless-stopped

sickchill:
  image: ghcr.io/linuxserver/sickchill
  container_name: sickchill
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/data:/config
    - /path/to/data:/downloads
    - /path/to/data:/tv
  ports:
    - 8081:8081
  restart: unless-stopped

scrutiny:
  image: ghcr.io/linuxserver/scrutiny
  container_name: scrutiny
  cap_add:
    - SYS_RAWIO
    - SYS_ADMIN #optional
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - SCRUTINY_API_ENDPOINT=http://localhost:8080
    - SCRUTINY_WEB=true
    - SCRUTINY_COLLECTOR=true
  volumes:
    - /path/to/config:/config
    - /run/udev:/run/udev:ro
  ports:
    - 8080:8080
  devices:
    - /dev/sda:/dev/sda
    - /dev/sdb:/dev/sdb
    - /dev/nvme1n1:/dev/nvme1n1
  restart: unless-stopped

sabnzbd:
  image: ghcr.io/linuxserver/sabnzbd
  container_name: sabnzbd
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/data:/config
    - /path/to/downloads:/downloads #optional
    - /path/to/incomplete/downloads:/incomplete-downloads #optional
  ports:
    - 8080:8080
    - 9090:9090
  restart: unless-stopped

rsnapshot:
  image: ghcr.io/linuxserver/rsnapshot
  container_name: rsnapshot
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/New_York
  volumes:
    - </path/to/appdata/config>:/config
    - </path/to/snapshots>:/.snapshots #optional
    - </path/to/data>:/data #optional
  restart: unless-stopped

resilio-sync:
  image: ghcr.io/linuxserver/resilio-sync
  container_name: resilio-sync
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/config:/config
    - /path/to/downloads:/downloads
    - /path/to/data:/sync
  ports:
    - 8888:8888
    - 55555:55555
  restart: unless-stopped

requestrr:
  image: ghcr.io/linuxserver/requestrr
  container_name: requestrr
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/appdata/config:/config
  ports:
    - 4545:4545
  restart: unless-stopped

raneto:
  image: ghcr.io/linuxserver/raneto
  container_name: raneto
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/appdata:/config
  ports:
    - 3000:3000
  restart: unless-stopped

radarr:
  image: ghcr.io/linuxserver/radarr
  container_name: radarr
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/data:/config
    - /path/to/movies:/movies #optional
    - /path/to/downloadclient-downloads:/downloads #optional
  ports:
    - 7878:7878
  restart: unless-stopped

pyload:
  image: ghcr.io/linuxserver/pyload
  container_name: pyload
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - /path/to/pyload/config:/config
    - /path/to/downloads:/downloads
  ports:
    - 8000:8000
    - 7227:7227 #optional
  restart: unless-stopped

pydio-cells:
  image: ghcr.io/linuxserver/pydio-cells
  container_name: pydio-cells
  hostname: pydio-cells
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - EXTERNALURL=yourdomain.url
    - SERVER_IP=${LAN_IP}
  volumes:
    - ${ROOT}/pydio-cells:/config
  ports:
    - 3333:8080
    - 33060:33060
  restart: unless-stopped

projectsend:
  image: ghcr.io/linuxserver/projectsend
  container_name: projectsend
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - MAX_UPLOAD=5000
  volumes:
    - ${ROOT}/projectsend:/config
    - ${HDD}/apps/projectsend:/data
  ports:
    - 2222:80
  restart: unless-stopped

plex:
  image: ghcr.io/linuxserver/plex
  container_name: plex
  network_mode: host
  environment:
    - PUID=1000
    - PGID=1000
    - VERSION=docker
  volumes:
    - ${ROOT}/plex:/config
    - ${HDD}/media/tv:/tv
    - ${HDD}/media/movies:/movies
  restart: unless-stopped

pixapop:
  image: ghcr.io/linuxserver/pixapop
  container_name: pixapop
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - APP_USERNAME=${PIXAPOP_USER}
    - APP_PASSWORD=${PIXAPOP_PASS}
  volumes:
    - ${ROOT}/pixapop:/config
    - ${HDD}/media/photos:/photos
  ports:
    - 80:80
  restart: unless-stopped

papermerge:
  image: ghcr.io/linuxserver/papermerge
  container_name: papermerge
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/papermerge:/config
    - ${HDD}/apps/papermerge:/data
  ports:
    - 1111:8000
  restart: unless-stopped

overseerr:
  image: ghcr.io/linuxserver/overseerr
  container_name: overseerr
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/overseerr:/config
  ports:
    - 5055:5055
  restart: unless-stopped

ombi:
  image: ghcr.io/linuxserver/ombi
  container_name: ombi
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/ombi:/config
  ports:
    - 3579:3579
  restart: unless-stopped

nzbhydra2:
  image: ghcr.io/linuxserver/nzbhydra2
  container_name: nzbhydra2
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/nzbhydra2:/config
    - ${ROOT}/media/downloads:/downloads
  ports:
    - 5076:5076
  restart: unless-stopped

nextcloud:
  image: ghcr.io/linuxserver/nextcloud
  container_name: nextcloud
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/nextcloud:/config
    - ${HDD}/apps/nextcloud:/data
  ports:
    - 8948:443
  restart: unless-stopped

mysql-workbench:
  image: ghcr.io/linuxserver/mysql-workbench
  container_name: mysql-workbench
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/mysql:/config
  ports:
    - 7804:3000
  cap_add:
    - IPC_LOCK
  restart: unless-stopped

mylar3:
  image: ghcr.io/linuxserver/mylar3
  container_name: mylar3
  environment:
    - PUID=1000
    - PGID=1000
  volumes:
    - ${ROOT}/mylar3:/config
    - ${HDD}/media/comics:/comics
    - ${HDD}/media/downloads:/downloads
  ports:
    - 8488:8090
  restart: unless-stopped

muximux:
  image: ghcr.io/linuxserver/muximux
  container_name: muximux
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/muximux:/config
  ports:
    - 8459:80
  restart: unless-stopped

mstream:
  image: ghcr.io/linuxserver/mstream
  container_name: mstream
  environment:
    - PUID=1000
    - PGID=1000
    - USER=${MSTREAM_USER}
    - PASSWORD=${MSTREAM_PASS}
    - USE_JSON=true
    - TZ=${TZ}
  volumes:
    - ${ROOT}/mstream:/config
    - ${HDD}/media/music:/music
  ports:
    - 7849:3000
  restart: unless-stopped

minetest:
  image: ghcr.io/linuxserver/minetest
  container_name: minetest
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - CLI_ARGS="--gameid minetest"
  volumes:
    - ${ROOT}/minetest:/config/.minetest
  ports:
    - 30000:30000/udp
  restart: unless-stopped

medusa:
  image: ghcr.io/linuxserver/medusa
  container_name: medusa
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/medusa:/config
    - ${HDD}/media/downloads:/downloads
    - ${HDD}/media/tv:/tv
  ports:
    - 3784:8081
  restart: unless-stopped

lidarr:
  image: ghcr.io/linuxserver/lidarr
  container_name: lidarr
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/lidarr:/config
    - ${HDD}/media/music:/music
    - ${HDD}/media/downloads:/downloads
  ports:
    - 8686:8686
  restart: unless-stopped

libreoffice:
  image: ghcr.io/linuxserver/libreoffice
  container_name: libreoffice
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/libreoffice:/config
  ports:
    - 1930:3000
  restart: unless-stopped

lazylibrarian:
  image: ghcr.io/linuxserver/lazylibrarian
  container_name: lazylibrarian
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - DOCKER_MODS=linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
  volumes:
    - ${ROOT}/lazylibrarian:/config
    - ${HDD}/media/downloads:/downloads
    - ${HDD}/media/books:/books
  ports:
    - 5299:5299
  restart: unless-stopped

jellyfin:
  image: ghcr.io/linuxserver/jellyfin
  container_name: jellyfin
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - JELLYFIN_PublishedServerUrl=192.168.1.194
  volumes:
    - ${ROOT}/jellyfin:/config
    - ${HDD}/media/tv:/data/tvshows
    - ${HDD}/media/movies:/data/movies
    - /opt/vc/lib:/opt/vc/lib
  ports:
    - 8096:8096
  restart: unless-stopped

jackett:
  image: ghcr.io/linuxserver/jackett
  container_name: jackett
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
    - AUTO_UPDATE=true
  volumes:
    - ${ROOT}/jackett:/config
    - ${HDD}/media/downloads:/downloads
  ports:
    - 9117:9117
  restart: unless-stopped

ipfs:
  image: ghcr.io/linuxserver/ipfs
  container_name: ipfs
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/ipfs:/config
  ports:
    - 6482:80
    - 4001:4001
    - 9145:5001
    - 1729:8080
  restart: unless-stopped

heimdall:
  image: ghcr.io/linuxserver/heimdall
  container_name: heimdall
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/heimdall:/config
  ports:
    - 4785:80
    # - 443:443
  restart: unless-stopped

hedgedoc_mariadb:
  image: ghcr.io/linuxserver/mariadb:latest
  container_name: hedgedoc_mariadb
  restart: always
  volumes:
    - ${ROOT}/hedgedoc/db:/config
  environment:
    - MYSQL_ROOT_PASSWORD=${HEDGEDOC_DB_ROOT}
    - MYSQL_DATABASE=hedgedoc
    - MYSQL_USER=${HEDGEDOC_DB_USER}
    - MYSQL_PASSWORD=${HEDGEDOC_DB_PASS}
    - PGID=1000
    - PUID=1000
    - TZ=${TZ}
hedgedoc:
  image: ghcr.io/linuxserver/hedgedoc:latest
  container_name: hedgedoc
  restart: always
  depends_on:
    - hedgedoc_mariadb
  volumes:
    - ${ROOT}/hedgedoc:/config
  environment:
    - DB_HOST=hedgedoc_mariadb
    - DB_USER=${HEDGEDOC_DB_USER}
    - DB_PASS=${HEDGEDOC_DB_PASS}
    - DB_NAME=hedgedoc
    - DB_PORT=3306
    - PGID=1000
    - PUID=1000
    - TZ=${TZ}
  ports:
    - "5834:3000"

headphones:
  image: ghcr.io/linuxserver/headphones
  container_name: headphones
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/headphones:/config
    - ${HDD}/media/downloads:/downloads
    - ${HDD}/media/music:/music
  ports:
    - 8181:8181
  restart: unless-stopped

freshrss:
  image: ghcr.io/linuxserver/freshrss
  container_name: freshrss
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=${TZ}
  volumes:
    - ${ROOT}/freshrss:/config
  ports:
    - 7392:80
  restart: unless-stopped
